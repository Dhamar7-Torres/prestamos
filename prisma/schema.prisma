generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Persona {
  id        Int        @id @default(autoincrement())
  nombre    String     @db.VarChar(100)
  apellido  String?    @db.VarChar(100)
  telefono  String?    @db.VarChar(20)
  email     String?    @db.VarChar(100)
  activo    Boolean    @default(true)
  createdAt DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  prestamos Prestamo[]

  @@map("personas")
}

model Prestamo {
  id              Int            @id @default(autoincrement())
  personaId       Int            @map("persona_id")
  montoTotal      Decimal        @map("monto_total") @db.Decimal(12, 2)
  montoPagado     Decimal        @default(0) @map("monto_pagado") @db.Decimal(12, 2)
  montoRestante   Decimal        @map("monto_restante") @db.Decimal(12, 2)
  tasaInteres     Decimal        @default(0) @map("tasa_interes") @db.Decimal(5, 2)
  tipoPrestamo    String         @default("personal") @map("tipo_prestamo") @db.VarChar(50)
  estado          String         @default("activo") @db.VarChar(50)
  fechaPrestamo   DateTime       @default(now()) @map("fecha_prestamo") @db.Timestamp(6)
  fechaCompletado DateTime?      @map("fecha_completado") @db.Timestamp(6)
  completado      Boolean        @default(false)
  cuotasPactadas  Int            @default(1) @map("cuotas_pactadas")
  cuotasPagadas   Int            @default(0) @map("cuotas_pagadas")
  interesGenerado Decimal        @default(0) @map("interes_generado") @db.Decimal(10, 2)
  moraAcumulada   Decimal        @default(0) @map("mora_acumulada") @db.Decimal(10, 2)
  createdAt       DateTime       @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime       @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)
  pagos           Pago[]
  persona         Persona        @relation(fields: [personaId], references: [id], onDelete: Cascade)
  recordatorios   Recordatorio[]

  @@map("prestamos")
}

model Pago {
  id           Int      @id @default(autoincrement())
  prestamoId   Int      @map("prestamo_id")
  monto        Decimal  @db.Decimal(10, 2)
  montoCapital Decimal  @default(0) @map("monto_capital") @db.Decimal(10, 2)
  montoInteres Decimal  @default(0) @map("monto_interes") @db.Decimal(10, 2)
  montoMora    Decimal  @default(0) @map("monto_mora") @db.Decimal(10, 2)
  metodoPago   String   @default("efectivo") @map("metodo_pago") @db.VarChar(50)
  fechaPago    DateTime @default(now()) @map("fecha_pago") @db.Timestamp(6)
  esCuota      Boolean  @default(false) @map("es_cuota")
  numeroCuota  Int?     @map("numero_cuota")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  createdBy    String   @default("sistema") @map("created_by") @db.VarChar(50)
  prestamo     Prestamo @relation(fields: [prestamoId], references: [id], onDelete: Cascade)

  @@map("pagos")
}

model Recordatorio {
  id                Int       @id @default(autoincrement())
  prestamoId        Int       @map("prestamo_id")
  titulo            String    @db.VarChar(200)
  descripcion       String?
  fechaRecordatorio DateTime  @map("fecha_recordatorio") @db.Timestamp(6)
  enviado           Boolean   @default(false)
  fechaEnvio        DateTime? @map("fecha_envio") @db.Timestamp(6)
  tipoRecordatorio  String    @default("pago") @map("tipo_recordatorio") @db.VarChar(50)
  activo            Boolean   @default(true)
  createdAt         DateTime  @default(now()) @map("created_at") @db.Timestamp(6)
  prestamo          Prestamo  @relation(fields: [prestamoId], references: [id], onDelete: Cascade)

  @@map("recordatorios")
}

model Configuracion {
  id          Int      @id @default(autoincrement())
  clave       String   @unique @db.VarChar(100)
  valor       String?
  descripcion String?
  tipoDato    String   @default("string") @map("tipo_dato") @db.VarChar(20)
  categoria   String   @default("general") @db.VarChar(50)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)

  @@map("configuracion")
}

model HistorialCambios {
  id              Int      @id @default(autoincrement())
  tablaAfectada   String   @map("tabla_afectada") @db.VarChar(50)
  registroId      Int      @map("registro_id")
  accion          String   @db.VarChar(20)
  datosAnteriores Json?    @map("datos_anteriores")
  datosNuevos     Json?    @map("datos_nuevos")
  usuario         String   @default("sistema") @db.VarChar(100)
  timestampCambio DateTime @default(now()) @map("timestamp_cambio") @db.Timestamp(6)
  ipAddress       String?  @map("ip_address") @db.Inet

  @@map("historial_cambios")
}
